// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TLU.BusinessFee.Data.EF;

namespace TLU.BusinessFee.Data.Migrations
{
    [DbContext(typeof(TLUBusinessFeeDbContext))]
    [Migration("20210311105605_updateData_V1")]
    partial class updateData_V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.CapBac", b =>
                {
                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TenCapBac")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaCapBac");

                    b.ToTable("CapBac");

                    b.HasData(
                        new
                        {
                            MaCapBac = "c1",
                            TenCapBac = "CAP1"
                        },
                        new
                        {
                            MaCapBac = "c2",
                            TenCapBac = "CAP2"
                        },
                        new
                        {
                            MaCapBac = "c3",
                            TenCapBac = "CAP3"
                        },
                        new
                        {
                            MaCapBac = "c4",
                            TenCapBac = "CAP4"
                        },
                        new
                        {
                            MaCapBac = "c5",
                            TenCapBac = "CAP5"
                        },
                        new
                        {
                            MaCapBac = "c6",
                            TenCapBac = "CAP6"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhi", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChiPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(true);

                    b.HasKey("MaChiPhi");

                    b.ToTable("ChiPhi");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Khach San"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve may bay"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Luu tru "
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve tau,xe"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTienDinhMuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChiPhi", "MaCapBac");

                    b.HasIndex("MaCapBac");

                    b.ToTable("DinhMuc");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c1",
                            DonVi = "dem",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c2",
                            DonVi = "dem",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c3",
                            DonVi = "dem",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c4",
                            DonVi = "dem",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c5",
                            DonVi = "dem",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c6",
                            DonVi = "dem",
                            SoTienDinhMuc = "500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "1500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "1700000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "2000000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "2300000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "2600000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "3000000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c1",
                            DonVi = "ngay",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c2",
                            DonVi = "ngay",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c3",
                            DonVi = "ngay",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c4",
                            DonVi = "ngay",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c5",
                            DonVi = "ngay",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c6",
                            DonVi = "ngay",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "100000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "120000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "300000"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoTienChiTieu")
                        .HasColumnType("int");

                    b.HasKey("MaChiPhi", "MaChuyenCongTac", "MaNhanVien");

                    b.HasIndex("MaChuyenCongTac", "MaNhanVien");

                    b.ToTable("ChiPhiCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChuyenCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValue(new DateTime(2021, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChuyenCongTac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("MaChuyenCongTac");

                    b.ToTable("ChuyenCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Lydo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime>("ThoiGianDeXuat")
                        .HasColumnType("datetime2");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaDeXuat");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("deXuatThanhToans");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MaChuyenCongTac", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhanVienCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaCapBac");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Mai Thuy Nga"
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Vu Duc Thi"
                        },
                        new
                        {
                            MaNhanVien = "IT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Cao Kim Anh"
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            MaCapBac = "c4",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Pham Phuong Thanh"
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Nguyen Duc Dan"
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Tran Thi Hue"
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nham Ngoc Tan"
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Ha Huy Khoai"
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Hong Nhung"
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            MaCapBac = "c2",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Hoang Ngoc Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Lam Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Quoc Tuan"
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Thi Hoa"
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            MaCapBac = "c2",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Tran Quoc Hung"
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            MaCapBac = "c3",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Canh Toan"
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Mai Tien Dung"
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Duc Khoa"
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            MaCapBac = "c6",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Le Huyen Trang"
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Ngoc Quang"
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            MaCapBac = "c2",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Huy Hoang"
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            MaCapBac = "c5",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Vu Tuan Tu"
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Thi Nga"
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            MaCapBac = "c4",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Thuy Duong"
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Van Thieu"
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Pham Hai Yen"
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Bui Sy Thang"
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Tran Hoang Duong"
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            MaCapBac = "c1",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Xuan The"
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Lan"
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Nguyen Bich Tram"
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Le Thi Quy"
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Ho Xuan Ngoc"
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Hoang Ngoc Ha"
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Van Lich"
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            MaCapBac = "c3",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Thi Hai"
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Dang canh Khanh"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.PhongBan", b =>
                {
                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("NgayThanhLap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 11, 17, 56, 5, 284, DateTimeKind.Local).AddTicks(3305));

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("MaPhongBan");

                    b.ToTable("PhongBans");

                    b.HasData(
                        new
                        {
                            MaPhongBan = "a0001",
                            TenPhongBan = "Phong kinh te"
                        },
                        new
                        {
                            MaPhongBan = "a0002",
                            TenPhongBan = "Phong CNTT"
                        },
                        new
                        {
                            MaPhongBan = "a0003",
                            TenPhongBan = "Phong dao tao"
                        },
                        new
                        {
                            MaPhongBan = "a0004",
                            TenPhongBan = "Phong truyen thong"
                        },
                        new
                        {
                            MaPhongBan = "a0005",
                            TenPhongBan = "Phong Ngon Ngu"
                        },
                        new
                        {
                            MaPhongBan = "a0006",
                            TenPhongBan = "Phong ctsv"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "RL01",
                            Description = "Quản trị hệ thống",
                            Name = "admin"
                        },
                        new
                        {
                            Id = "RL02",
                            Description = "nhân viên trong một phòng ban",
                            Name = "Nhân viên"
                        },
                        new
                        {
                            Id = "RL03",
                            Description = "trưởng bộ phận của một phòng ban",
                            Name = "Trưởng bộ phận"
                        },
                        new
                        {
                            Id = "RL04",
                            Description = "nhân viên phòng kế toán",
                            Name = "Phòng kế toán"
                        },
                        new
                        {
                            Id = "RL05",
                            Description = "lãnh đạo nhà trường",
                            Name = "Lãnh đạo nhà trường"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEBRZ6dpavAIjO0z7ji/feHqcYLEABdBSRlD4QEBJhHiqAM+Mrln85rQP2IvcKQUDUg=="
                        },
                        new
                        {
                            MaNhanVien = "IT002",
                            PasswordHash = "AQAAAAEAACcQAAAAECt1F7cVvL+ljNPB2bWKaOmxoiFSAWgEc2YnQKobk86QrsiyDLeZdc3Etn7LRAiGxg=="
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEAFvqh6Anrs0e5jr6dX8YqK55ENJuSxDCp9ftQxkmmN3BtarSL3HLqXDghf2SFJgAg=="
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEItpqugJSPH4gNa7x2fivYQr+Hom3kldZKCseYfQZKkwVgk5TDkqpq8f3PfCeS4heQ=="
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            PasswordHash = "AQAAAAEAACcQAAAAECl/Ep3uH984PrKTeXqQf/FZbdVEIo/9E2O+sDYQDbZ3Kqyqv5yU2xpakQ3rgfk0gQ=="
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEJWV4nvm0WCdanm1uHg4EL09YLp/JD93AtufKaqozM+INTEF4Dsnm+VBXb7WaT56RA=="
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEK83H8I4Okv4kvdBS/P7Itz/f9q0bCOLeFOendAiAkKrZ9fyIbtRIc3A4Y6U+gFfvA=="
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEDOu7m5sg6NPEqXyjzNOoJeVMRESGNgiVipRty/Fo41PttYi09IjjnFWZ+l9O2wuSQ=="
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEAFg+yi9zSwHyXnsGFv79zkqK4bRGfW8l4RMLJPDmF9SoTX0v//QeSTB5u6PlTz0ow=="
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEALH+OYJLB0HZECHlhvYeg0i+GDqFCou71gZXtmirEZF5oUzw5bcrYz4bf1vmCKFRg=="
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEOZVfOArG/E0ZXfO2fPKEXVT4xku0IFyr+kElq4zH+WApixciTfw1vgSqFwo0ABcyA=="
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEF653wC+Aav56KbcDwenSRCA5wVNGA20N63blBxYfTfADO6OuwsAJdkygYolFOxFtA=="
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEMyWBRP66mhruvA1QRKJCdPmcI7kHOQ0AKOnyC6FZfElEO67dMRUisHiVUZ6OEKCcQ=="
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEKyo/HmMQ/L4ywKbPI3Z6p4cwBjV93mqe+Ll2SMLLyJHA/k2XPYwx2gim1zHQOLs0w=="
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            PasswordHash = "AQAAAAEAACcQAAAAENOuX0ir3BcDZvKcPvLBm276yS2sy0H41FBQP2pKURPkmjGFDU6DrCap88L/WiYalg=="
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEN1iwUzRth5yJI5foKSn+KcwkBmwt+pTxX1CvirzuS1foZAGMzVyss+o4NQ8titGgQ=="
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEA+Y91jJ+AHzu7/5cMxLC6ua7DsB4llcqhd8B6/a0bJrePAVRMO6/9k8x3a+aBoldQ=="
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEBF6fZZpeEC/imwPFCvP7C/l2/XokEJq7KgWEAEqsNDB9LOHmuW10TSBjsDbt9du8Q=="
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEEKZIsBsyCm8+SO51ExllMWEpuuYicrIhe4Da/OdppKaXWZzSlqNcortizfY6/wurA=="
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEEOMDSsTRY3/eL4IOaNd+ss0Frm0Pp+ZtT6ENS9pS0bOaW9Xbfzz8vE5O2H3NQEu/g=="
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEFo+DrsW1VlQOE5fCdTGpTLUTHWJ8EEaYkMNfDne2kzJKYr/pDZf4rzkhG+Ud/BKMw=="
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEFChzMVJPTD8NtVUddhB9i2B3yklW6RroOKxTiU/aQj6BtG5duDsP1HF+dNvC5U89Q=="
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEBlAgQeJJyETkbr0H4ETL63MleSDrVMPHSTiD7D/iLpov4XFaf+Uw/IVA+GJMXc7Ag=="
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEIffg02Yk/qABXfFQf9ydCeh3goj0UVJt3rIVBBBarPD5ttOAwgOhOCDTukJVm/fog=="
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            PasswordHash = "AQAAAAEAACcQAAAAEPQ7MLTfP5PWUOkdOKHg9wF83m2NGsOXvBnv9nx0eIHPi35J5PEurdppHbUOVXhpcg=="
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            PasswordHash = "AQAAAAEAACcQAAAAEMzu9SfjP3GBsDLNPZC+gXNSS+YZW9lOZXolBb7Hw8Y6jYPvgBgOaDRQLUHzJmEhvA=="
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            PasswordHash = "AQAAAAEAACcQAAAAEOx31+RoTVcGO3hRQEekPSGWXzyNR07VmxU9Wca2rD4JsqObCrcSgXr/s2NjxU7iOA=="
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            PasswordHash = "AQAAAAEAACcQAAAAEPJRCXr2X5NrEOgPF8CM2IyXG8Fbp+VeDAkbv6cI2JzS5WhDUMuUKNW+Nf74HuciTQ=="
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            PasswordHash = "AQAAAAEAACcQAAAAEGl2NuuXMvZJdoIwYkDpMpZTIlNFBTYLDuDczK2T9ni7lgzBYgwA7hcKs6bKLF74dA=="
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            PasswordHash = "AQAAAAEAACcQAAAAEGG5VoHsQ0IyRmexOKJd1BTnY3+oxM0T15buHN2Emjawri2ZmkS0FD+sxHYZmFuRRA=="
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEK39bX4haJJTX1Icc2yngWn8RUql/ewc1aYOcFwnsOIHdc9fJGaNqdFzWCyAC3ladw=="
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEC4Y6+0tVSf42cok3z0qiiduLS9EhdhKRxVfQmyIXy2ITvRHB/4MD7YxAs/VZ4+15w=="
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEECacmHKe+y/GiHgagZMzwwFfS5W2cKTgaK0I5jy0UETyrq/B4t0wNJOvcZ3BJjKFA=="
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEKizgtvSjz47YJcXgtIdOt67tjiwawBx8BXFCRIkYlUhWIy6LnFMBXRyc/s6EDi7ag=="
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEGOHtQDXkCb6fPBFk+MQztNQudIOPTfyiFQMiXuKLr0gM2S9lcpo8VepPi41+4n4rQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEFZYvTsP+TdhAQtLeD0TkCGq+YM84nU0xzPJOZuNmBwMGJO9xlnhzA9zKJZRYEXkkA=="
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("RoleId", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "IT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "KT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "DT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "TT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "NN001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "CT001"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaCapBac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhi")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhis")
                        .WithMany("chiPhiCongTac")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienCongTac", "nhanVienCongTacs")
                        .WithMany("chiPhiCongTac")
                        .HasForeignKey("MaChuyenCongTac", "MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienDeXuat")
                        .WithMany("deXuatThanhToans")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaCapBac");

                    b.HasOne("TLU.BusinessFee.Data.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaPhongBan");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithOne("User")
                        .HasForeignKey("TLU.BusinessFee.Data.Entities.User", "MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("userClaims")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserLogin")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserToken")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
