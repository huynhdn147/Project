// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TLU.BusinessFee.Data.EF;

namespace TLU.BusinessFee.Data.Migrations
{
    [DbContext(typeof(TLUBusinessFeeDbContext))]
    [Migration("20210315163314_update_DateTime")]
    partial class update_DateTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "home titleee",
                            Value = "this is home page"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.CapBac", b =>
                {
                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TenCapBac")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaCapBac");

                    b.ToTable("CapBac");

                    b.HasData(
                        new
                        {
                            MaCapBac = "c1",
                            TenCapBac = "CAP1"
                        },
                        new
                        {
                            MaCapBac = "c2",
                            TenCapBac = "CAP2"
                        },
                        new
                        {
                            MaCapBac = "c3",
                            TenCapBac = "CAP3"
                        },
                        new
                        {
                            MaCapBac = "c4",
                            TenCapBac = "CAP4"
                        },
                        new
                        {
                            MaCapBac = "c5",
                            TenCapBac = "CAP5"
                        },
                        new
                        {
                            MaCapBac = "c6",
                            TenCapBac = "CAP6"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhi", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChiPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(true);

                    b.HasKey("MaChiPhi");

                    b.ToTable("ChiPhi");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Khach San"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve may bay"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Luu tru "
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve tau,xe"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTienDinhMuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChiPhi", "MaCapBac");

                    b.HasIndex("MaCapBac");

                    b.ToTable("DinhMuc");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c1",
                            DonVi = "dem",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c2",
                            DonVi = "dem",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c3",
                            DonVi = "dem",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c4",
                            DonVi = "dem",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c5",
                            DonVi = "dem",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c6",
                            DonVi = "dem",
                            SoTienDinhMuc = "500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "1500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "1700000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "2000000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "2300000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "2600000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "3000000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c1",
                            DonVi = "ngay",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c2",
                            DonVi = "ngay",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c3",
                            DonVi = "ngay",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c4",
                            DonVi = "ngay",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c5",
                            DonVi = "ngay",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c6",
                            DonVi = "ngay",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "100000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "120000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "300000"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoTienChiTieu")
                        .HasColumnType("int");

                    b.Property<int>("TongThanhToan")
                        .HasColumnType("int");

                    b.HasKey("MaChiPhi", "MaChuyenCongTac");

                    b.HasIndex("MaChuyenCongTac");

                    b.ToTable("ChiPhiCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChuyenCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChuyenCongTac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("MaChuyenCongTac");

                    b.ToTable("ChuyenCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Lydo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianDeXuat")
                        .HasColumnType("datetime2");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaDeXuat");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("deXuatThanhToans");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MaChuyenCongTac", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhanVienCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaCapBac");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Mai Thuy Nga"
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Vu Duc Thi"
                        },
                        new
                        {
                            MaNhanVien = "IT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Cao Kim Anh"
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            MaCapBac = "c4",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Pham Phuong Thanh"
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Nguyen Duc Dan"
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Tran Thi Hue"
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nham Ngoc Tan"
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Ha Huy Khoai"
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Hong Nhung"
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            MaCapBac = "c2",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Hoang Ngoc Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Lam Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Quoc Tuan"
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Thi Hoa"
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            MaCapBac = "c2",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Tran Quoc Hung"
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            MaCapBac = "c3",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Canh Toan"
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Mai Tien Dung"
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Duc Khoa"
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            MaCapBac = "c6",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Le Huyen Trang"
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Ngoc Quang"
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            MaCapBac = "c2",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Huy Hoang"
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            MaCapBac = "c5",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Vu Tuan Tu"
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Thi Nga"
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            MaCapBac = "c4",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Thuy Duong"
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Van Thieu"
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Pham Hai Yen"
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Bui Sy Thang"
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Tran Hoang Duong"
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            MaCapBac = "c1",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Xuan The"
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Lan"
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Nguyen Bich Tram"
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Le Thi Quy"
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Ho Xuan Ngoc"
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Hoang Ngoc Ha"
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Van Lich"
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            MaCapBac = "c3",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Thi Hai"
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Dang canh Khanh"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.PhongBan", b =>
                {
                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("NgayThanhLap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 15, 23, 33, 13, 578, DateTimeKind.Local).AddTicks(3547));

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("MaPhongBan");

                    b.ToTable("PhongBans");

                    b.HasData(
                        new
                        {
                            MaPhongBan = "a0001",
                            TenPhongBan = "Phong kinh te"
                        },
                        new
                        {
                            MaPhongBan = "a0002",
                            TenPhongBan = "Phong CNTT"
                        },
                        new
                        {
                            MaPhongBan = "a0003",
                            TenPhongBan = "Phong dao tao"
                        },
                        new
                        {
                            MaPhongBan = "a0004",
                            TenPhongBan = "Phong truyen thong"
                        },
                        new
                        {
                            MaPhongBan = "a0005",
                            TenPhongBan = "Phong Ngon Ngu"
                        },
                        new
                        {
                            MaPhongBan = "a0006",
                            TenPhongBan = "Phong ctsv"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "RL01",
                            Description = "Quản trị hệ thống",
                            Name = "admin"
                        },
                        new
                        {
                            Id = "RL02",
                            Description = "nhân viên trong một phòng ban",
                            Name = "Nhân viên"
                        },
                        new
                        {
                            Id = "RL03",
                            Description = "trưởng bộ phận của một phòng ban",
                            Name = "Trưởng bộ phận"
                        },
                        new
                        {
                            Id = "RL04",
                            Description = "nhân viên phòng kế toán",
                            Name = "Phòng kế toán"
                        },
                        new
                        {
                            Id = "RL05",
                            Description = "lãnh đạo nhà trường",
                            Name = "Lãnh đạo nhà trường"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEBFnI9n9wrzWi+Zz5PkfI8mlcIbY/Y0yO/NELw/JHuP6VUNtIKPEjSaLYje90dI55A=="
                        },
                        new
                        {
                            MaNhanVien = "IT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEIyXS/X1k2VV1axp63wBsuSElgL1mY0soecgxUhK54kC+j8m9Svt2K9+SMuHXNNMyw=="
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEA3JyuOCv/OSAJuhuXObFD5a/lBjzPGFjGQ5yKfcFUWxBB6oWrG/4ON80qrNNI2/LA=="
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEEAyJ8ziF5vUEzU/l9Fd3vQ/ZnM2djzDjsxRZzeuOLt6O/jUIC+4ClM9WOiLcPx2KQ=="
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEBBQDUkIVsKyHqvOnxg0FUKIeHsOk8WdonKfpOAXGtd1d5EpwFZa9uXuzk8FPNuGdw=="
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEHxeT/e0T20Ngx2d4wsmy5xd8cpigE87tjYsws4vVg5fbAvg3/nKkeF/5oMULdHEvg=="
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            PasswordHash = "AQAAAAEAACcQAAAAECAn4uTM89bvZAbWz7JRK+DTUo0vQcor0EwrlKIZv0YxX20c1soYv44h+8b2tIduSg=="
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEKQ0ndERe2sxLag3TaN72+FFe1SEMFf//Ap6Gmc+PlLpajP8igD2xcv1XjE1OZk2IQ=="
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEJI04bong7Oin/MkIxsN4QqfONjiDmn5q7fVDoO7Tmww4I9lJSW8uQ8kVHWx4FH6wA=="
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEKMdinbBb3dX+qVZfNlhAkehwIptkKNSz7BAigPlVchKCPg/GsESGibeonNYCQY3KA=="
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEAPNsfJPKFVVE8gLB+6w55b9cyOu+2JuRe4MRwJexpz8D4KmBQwApCphxQC7M/d50g=="
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEKtgUE2zXub8B0G0R7/da95gtHmMEFvGup7ijj0Ha5+lFEqKrtnO0WqJ2LnJhUgmJg=="
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEIksoDk75Mb6OUd7Y7bOyY+var2SDflMc0RaDeNb56xgirLq5K7LzK+CI420mCXq+w=="
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEC1HLZmDCRc+fs136eoMs1bxpL0T3w/KhYB4BveBpMj4Rkrl4lnRUXAFgC0ynMIRsg=="
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEI8FH0rFYm/ERGsXZLJbbKs7e6RpxjwwgSngDIWX2LVYHzyTWaJrNWN+jQW8dYsZBw=="
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEAPq7ih4TaIGFXjV0V66KNRWUqa+iuAB3GbrdgiuqxyXaXKt4BkEcFcjmm7PWkR1VQ=="
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            PasswordHash = "AQAAAAEAACcQAAAAELaGjmjePK7XBBjz9FRaCBEUBx8G/Kg+wGYy5yFNUXnEZJt7vXDJNXf5zoaAIhMvuQ=="
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEBt+L1/h/epzhRdaebxUTVjcygvPhiowcItuboWK9CzJRF+ER6vIdKtWs7gtv5tv1w=="
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEIT+p21cteEP7NuJH62vn/eL21LAa7F8ejR6+s2ZnnAiZjgm627NuSX6Yu2Zr5AOsA=="
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEA4iFSa3CmMX9wQwH5494D/Mw6sMW05hTVqbSdgLyraagykTysdW6WbCGLe0LAjVBA=="
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            PasswordHash = "AQAAAAEAACcQAAAAELn16PEnUP0ZqjNv10MDP73C2dBLhi/HqPyR0R/2I5CbKW0Wjqu85NZzQIbjRPterw=="
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEFOhgB2ZLFaO7809E8SicqXohzv4RkG3s34z3BiBCwuuXRc/ymLqFzX3GorR4cSy6w=="
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEFu1a85y6Q1PgTTltZzUnjf+X7ZyAmm144tvAhdwJVue7/LS6sFvYpKrP3UP85rWYw=="
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEJheKTEQSf7Evir5+xw6umV3TINIfNAqdK9QOCKWEb4A0WEU0r9CrmWFwhAvdVINKg=="
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            PasswordHash = "AQAAAAEAACcQAAAAEIM/8ChpmUsdYhs16iuQvbhL702H4Obw9eM74761XK6CcB1AEgZuvuzCCgzCdxLoJw=="
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            PasswordHash = "AQAAAAEAACcQAAAAEB7vJbbn6fuVIogDICUB3fQVDvPNCNYcXcnXnM3ny5eGTTtQgheaQetD1H46YUZ/iA=="
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            PasswordHash = "AQAAAAEAACcQAAAAEDy3UgBCnJCYRrBDE47iSStsR+5rzd8H08D3DlwQ9RcQNZwYCZd4RYXHpSb5KCgE/w=="
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            PasswordHash = "AQAAAAEAACcQAAAAEFzt7ercTDueT0DyxQ99LgYKpFLjkfj/GlysgFnLk1OdJvo6sxRlxopGiDZnheIgxw=="
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            PasswordHash = "AQAAAAEAACcQAAAAEGXHbpFAZ8Z0hP22CeNJODyMKIYfh2B3WM1VedWnXjhMtMz873aIrTLMr3GGNuPifQ=="
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            PasswordHash = "AQAAAAEAACcQAAAAEPuWKhxOtJTDVkbGc9aVGnxg+AzWBK6T7k9xG4FCQ98HapEKnqPKCxLNdNwdHcdHQQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEDngwtg89QbgZODkOYV3YvYkfTKgCRifPmx8EBarC5Zofz74/EWQidhyqe1Oud5rlg=="
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEOoY8zhiBk6jTifdrEb93giC1PT3eR5GpivLpVaYrp/iIfUzGiyO3EeEJVWJyesULQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEKbbkjI3cJkS6SwRxKtt2pC7U/Fb6rugfx9bCQNbjlQCCvwd84V+0nDJS4QsqZ0s/w=="
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEMOw4OXHPuo3T0Z8EPG+91ckHl495m6XJHQU2JS48C7fRtejIioy2Nn56nDShecd3w=="
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEC5aJIja6vB8yZ13pSN7rle9fTAg02LohCWasKpHlifEfP4valDGeKx1aIq6oTIcsQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEEzc5iXAEhY10XgcIth6fTGghu0COJdNN9TzGby3gLrwMFx5cSNddl1JhfIPBVuong=="
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("RoleId", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "IT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "KT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "DT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "TT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "NN001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "CT001"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaCapBac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhi")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhis")
                        .WithMany("chiPhiCongTac")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("chiPhiCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienDeXuat")
                        .WithMany("deXuatThanhToans")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaCapBac");

                    b.HasOne("TLU.BusinessFee.Data.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaPhongBan");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithOne("User")
                        .HasForeignKey("TLU.BusinessFee.Data.Entities.User", "MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("userClaims")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserLogin")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserToken")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
