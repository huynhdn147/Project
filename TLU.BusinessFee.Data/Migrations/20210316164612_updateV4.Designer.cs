// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TLU.BusinessFee.Data.EF;

namespace TLU.BusinessFee.Data.Migrations
{
    [DbContext(typeof(TLUBusinessFeeDbContext))]
    [Migration("20210316164612_updateV4")]
    partial class updateV4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "home titleee",
                            Value = "this is home page"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.CapBac", b =>
                {
                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TenCapBac")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaCapBac");

                    b.ToTable("CapBac");

                    b.HasData(
                        new
                        {
                            MaCapBac = "c1",
                            TenCapBac = "CAP1"
                        },
                        new
                        {
                            MaCapBac = "c2",
                            TenCapBac = "CAP2"
                        },
                        new
                        {
                            MaCapBac = "c3",
                            TenCapBac = "CAP3"
                        },
                        new
                        {
                            MaCapBac = "c4",
                            TenCapBac = "CAP4"
                        },
                        new
                        {
                            MaCapBac = "c5",
                            TenCapBac = "CAP5"
                        },
                        new
                        {
                            MaCapBac = "c6",
                            TenCapBac = "CAP6"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhi", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChiPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(true);

                    b.HasKey("MaChiPhi");

                    b.ToTable("ChiPhi");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Khach San"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve may bay"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Luu tru "
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve tau,xe"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTienDinhMuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChiPhi", "MaCapBac");

                    b.HasIndex("MaCapBac");

                    b.ToTable("DinhMuc");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c1",
                            DonVi = "dem",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c2",
                            DonVi = "dem",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c3",
                            DonVi = "dem",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c4",
                            DonVi = "dem",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c5",
                            DonVi = "dem",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c6",
                            DonVi = "dem",
                            SoTienDinhMuc = "500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "1500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "1700000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "2000000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "2300000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "2600000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "3000000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c1",
                            DonVi = "ngay",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c2",
                            DonVi = "ngay",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c3",
                            DonVi = "ngay",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c4",
                            DonVi = "ngay",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c5",
                            DonVi = "ngay",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c6",
                            DonVi = "ngay",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "100000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "120000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "300000"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoTienChiTieu")
                        .HasColumnType("int");

                    b.Property<int>("TongThanhToan")
                        .HasColumnType("int");

                    b.HasKey("MaChiPhi", "MaChuyenCongTac");

                    b.HasIndex("MaChuyenCongTac");

                    b.ToTable("ChiPhiCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChuyenCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChuyenCongTac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("chua thuc hien");

                    b.HasKey("MaChuyenCongTac");

                    b.ToTable("ChuyenCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatFile", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .IsUnicode(false)
                        .HasDefaultValue("5");

                    b.HasKey("FileID");

                    b.HasIndex("MaDeXuat");

                    b.ToTable("DeXuatFile");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Lydo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianDeXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaDeXuat");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("deXuatThanhToans");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MaChuyenCongTac", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhanVienCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaCapBac");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Mai Thuy Nga"
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Vu Duc Thi"
                        },
                        new
                        {
                            MaNhanVien = "IT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Cao Kim Anh"
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            MaCapBac = "c4",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Pham Phuong Thanh"
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Nguyen Duc Dan"
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Tran Thi Hue"
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nham Ngoc Tan"
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Ha Huy Khoai"
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Hong Nhung"
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            MaCapBac = "c2",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Hoang Ngoc Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Lam Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Quoc Tuan"
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Thi Hoa"
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            MaCapBac = "c2",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Tran Quoc Hung"
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            MaCapBac = "c3",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Canh Toan"
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Mai Tien Dung"
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Duc Khoa"
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            MaCapBac = "c6",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Le Huyen Trang"
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Ngoc Quang"
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            MaCapBac = "c2",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Huy Hoang"
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            MaCapBac = "c5",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Vu Tuan Tu"
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Thi Nga"
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            MaCapBac = "c4",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Thuy Duong"
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Van Thieu"
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Pham Hai Yen"
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Bui Sy Thang"
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Tran Hoang Duong"
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            MaCapBac = "c1",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Xuan The"
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Lan"
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Nguyen Bich Tram"
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Le Thi Quy"
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Ho Xuan Ngoc"
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Hoang Ngoc Ha"
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Van Lich"
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            MaCapBac = "c3",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Thi Hai"
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Dang canh Khanh"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.PhongBan", b =>
                {
                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("NgayThanhLap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 16, 23, 46, 11, 968, DateTimeKind.Local).AddTicks(1685));

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("MaPhongBan");

                    b.ToTable("PhongBans");

                    b.HasData(
                        new
                        {
                            MaPhongBan = "a0001",
                            TenPhongBan = "Phong kinh te"
                        },
                        new
                        {
                            MaPhongBan = "a0002",
                            TenPhongBan = "Phong CNTT"
                        },
                        new
                        {
                            MaPhongBan = "a0003",
                            TenPhongBan = "Phong dao tao"
                        },
                        new
                        {
                            MaPhongBan = "a0004",
                            TenPhongBan = "Phong truyen thong"
                        },
                        new
                        {
                            MaPhongBan = "a0005",
                            TenPhongBan = "Phong Ngon Ngu"
                        },
                        new
                        {
                            MaPhongBan = "a0006",
                            TenPhongBan = "Phong ctsv"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "RL01",
                            Description = "Quản trị hệ thống",
                            Name = "admin"
                        },
                        new
                        {
                            Id = "RL02",
                            Description = "nhân viên trong một phòng ban",
                            Name = "Nhân viên"
                        },
                        new
                        {
                            Id = "RL03",
                            Description = "trưởng bộ phận của một phòng ban",
                            Name = "Trưởng bộ phận"
                        },
                        new
                        {
                            Id = "RL04",
                            Description = "nhân viên phòng kế toán",
                            Name = "Phòng kế toán"
                        },
                        new
                        {
                            Id = "RL05",
                            Description = "lãnh đạo nhà trường",
                            Name = "Lãnh đạo nhà trường"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ9+868NqhU4oKEGoSdeWIP5DdVugzxjBjJPUjQ1ZynMgNnsJmIlWVKou4ZGAXmWMA=="
                        },
                        new
                        {
                            MaNhanVien = "IT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEOCOAJoXkl+MS6qL0NTIYQYK3WVQN9jqilsyXWvZeeWqS0Ukj1ip3FXXa0eZN/etRQ=="
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEI0OtooXYfy2ZA7JUA7F+vFiUt7hopQZy5/1EpDlJb/VyK5cSu71XdJfEUowClCrRQ=="
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEMJcNAGd95tM39lp6K5ju7YaoB7HlNr2fOcMbXBEakB/Ibxy8qdj6hUqWVASAiU8Hg=="
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEOBv69DuAurDYN0ITcBs4cM0ny2kiIIEmBDryVNclKgH5z8aT+AybUZzCTmUSI3Shw=="
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ1ml5HjGjRXDtrVdsWwZKWbN3X1bhS9MglzH4p2QMt82/9wV3H28XumroiWzhsoHQ=="
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEMFM+j5PdUpv8gI2XV3fAx67suR1LwlOD5uEFANYv0gn4wTqxsCo2KORoYIOpLx1VQ=="
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            PasswordHash = "AQAAAAEAACcQAAAAELr1QdcGwX9xwUxhdif5DGfoZ/IoyTrUEBiVXJtjUFzjSvLEyozN6pipyKJHb5wxMA=="
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEBLiQXXFpopaq09kl1TktW5HOcUm+s5eOhdqphpMK1CHGrqb21R4d1fLWhbDfXrkyA=="
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEOkS7cBxvnxwlBpEkDwU7MwNuO4KJrE32LpKWoFWShvD1qQrZJjvTNISVDvPpCOfqg=="
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEM7y9878EqXRKm9eswN7wOQbZkBqCFcqqbwA/0JLTGkKZvfkWEL2DJthQERSTGs9mw=="
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEN8RtilXSOp9hL8SiTAeiymsZLbrd++n2y8vSVllm0quqdiPB5u+6nzhXvUiittxxg=="
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEPXt9SAo3kJ1EFgfMxobx3Fb3lSHWeLx1toFnm+JjAuuWP7ULMIiAFq92RkcckaUsg=="
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEGD7bs7Rrf7I/Vu4TPP/f2ddXCNJ18lDn4v0wrllF2LlaGb5JS9s08IgZJNzI6mUgg=="
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEKl15I2fUMKBWyvvEaIf6WUJ5+CQcpDEpoo05lDQnVm+GzG/Usls4WTm9hBQAdQ1ZA=="
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEDrlDp7vIpupwTvZEjExEowRFstOvnZN8n/LGdAUs5ZeciAJZ+5tQAQfeEUxjjotGw=="
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEHH8nw/9rFbN5EZSlbLt9+dC7OJuBUQjulzzGQ+BhBYGaYg8oVPXfaAG7tyJCPGlbA=="
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEOvFWchC/mUfvSV4TlaF2lr9r/NJe0XIsBLJZuHPngT9tgv0xcG80nSzbps56g256w=="
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEPOJIbI2I9ZSDUDUIez1FqpvXFg4BvzAXe234h1d+drf4SvcYW6sPMEnkAgR9/g+Ng=="
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEBsiAahewEu+apjYa34JAaTU0CCDI602ck5q99q1vadvu48EJllIpXlKXlFx3mC1Tw=="
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEGJeLT4mERV5ocemnMGPeV4WiXZkgoVy6/fDHm9kzoPTdgmK6jKs5LzWkhrAmUeXaA=="
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEPMlFIUL6aCTpf750czcaZrqg5SEryvnbRtn3bCTEEehXZQyu0rA278J1Qco/FmqpA=="
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEAb6+5L7ReZE+1vnHyMY7+bKxfgbXbOMaPUISSp35moskw3YlbANCTQhKz9/NOFBbg=="
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEMLlL/H1FXZCZZ5QrtHCMtZDY9XkiU4QkJtjCE4md2BegPPyh7LG9VF8pRqeLHXlVg=="
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            PasswordHash = "AQAAAAEAACcQAAAAEG+z5ltsORE7McMMA0yWg0lkBhNZ/Nr9wEf5ye98HwY/DAcUuuymtZJX8Azsuv5XaQ=="
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            PasswordHash = "AQAAAAEAACcQAAAAEIf0oSOmkpjgZzyX/M5JGgF/rYNZXbtWxBqBPAAOZt59eEDMhxjdDGhymtLzR3y3bQ=="
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            PasswordHash = "AQAAAAEAACcQAAAAEKWbo6POK16nGnady36H3nuaerIpuGqdjRL3htzzHsnXpgQQR/Uh7pHs8tQqT7ffoQ=="
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            PasswordHash = "AQAAAAEAACcQAAAAELAm64AZsmu7rtHBX82v7QjgJzgDpt4Zjs5VuWFZK7E5tlV2JB/hX3h3sy+o56/9LQ=="
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            PasswordHash = "AQAAAAEAACcQAAAAEHPI5G/O5+2Ee+4vtw31faucVPCb1eM6X6NxydN7P7CjFdBMgD6UvvY6fKGKeb3NkQ=="
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            PasswordHash = "AQAAAAEAACcQAAAAEAthp/+VjGosuJWAoubMW1XuDmyWUKwxILt2a+v8ASwpAsPWR9SH3CVSMPuLWIRSdw=="
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEPY+nfThNzOvjsYlQdkpdC+GAj8CFNeZZrdHxbgZ0f9T02V2GWrDvGvTLpKAz4NeXg=="
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            PasswordHash = "AQAAAAEAACcQAAAAELHbzmloXVxUwSu0rvLJgAamTQ2hiNIS4RtKqPdn0SxyweMwfajWxtgIpW+WRwgClQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEBL10ijydyldjyn3W2miUJdl1PrckFpx5aj1c/eGT2AbTPewyTuMQpouTL7JfivKmA=="
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJVpagEspSQ0p42jpsuuAJfCEYgzKqCJtfRn9UbK+dlz1s24PcxDrTPVjh7T9D6XQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEAPY03OUIrvvvd4gF7LnCvSWYHRhOIquEkUV61GUtj0QsryHGFTjSgsIknVKkj1UDg=="
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEAQ/FXNacGOXbhaskhMYnzgksokXOfaTsKlyKbkljCc7XMKcikjJbgiIMQKmrD+kRw=="
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("RoleId", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "IT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "KT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "DT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "TT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "NN001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "CT001"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaCapBac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhi")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhis")
                        .WithMany("chiPhiCongTac")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("chiPhiCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatFile", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", "DeXuatThanhToan")
                        .WithMany("deXuatFiles")
                        .HasForeignKey("MaDeXuat");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienDeXuat")
                        .WithMany("deXuatThanhToans")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaCapBac");

                    b.HasOne("TLU.BusinessFee.Data.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaPhongBan");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithOne("User")
                        .HasForeignKey("TLU.BusinessFee.Data.Entities.User", "MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("userClaims")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserLogin")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserToken")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
