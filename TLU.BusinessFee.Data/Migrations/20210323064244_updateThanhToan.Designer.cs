// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TLU.BusinessFee.Data.EF;

namespace TLU.BusinessFee.Data.Migrations
{
    [DbContext(typeof(TLUBusinessFeeDbContext))]
    [Migration("20210323064244_updateThanhToan")]
    partial class updateThanhToan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "home titleee",
                            Value = "this is home page"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.CapBac", b =>
                {
                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TenCapBac")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaCapBac");

                    b.ToTable("CapBac");

                    b.HasData(
                        new
                        {
                            MaCapBac = "c1",
                            TenCapBac = "CAP1"
                        },
                        new
                        {
                            MaCapBac = "c2",
                            TenCapBac = "CAP2"
                        },
                        new
                        {
                            MaCapBac = "c3",
                            TenCapBac = "CAP3"
                        },
                        new
                        {
                            MaCapBac = "c4",
                            TenCapBac = "CAP4"
                        },
                        new
                        {
                            MaCapBac = "c5",
                            TenCapBac = "CAP5"
                        },
                        new
                        {
                            MaCapBac = "c6",
                            TenCapBac = "CAP6"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhi", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChiPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(true);

                    b.HasKey("MaChiPhi");

                    b.ToTable("ChiPhi");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Khach San"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve may bay"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Luu tru "
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve tau,xe"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTienDinhMuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChiPhi", "MaCapBac");

                    b.HasIndex("MaCapBac");

                    b.ToTable("DinhMuc");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c1",
                            DonVi = "dem",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c2",
                            DonVi = "dem",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c3",
                            DonVi = "dem",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c4",
                            DonVi = "dem",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c5",
                            DonVi = "dem",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c6",
                            DonVi = "dem",
                            SoTienDinhMuc = "500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "1500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "1700000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "2000000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "2300000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "2600000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "3000000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c1",
                            DonVi = "ngay",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c2",
                            DonVi = "ngay",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c3",
                            DonVi = "ngay",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c4",
                            DonVi = "ngay",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c5",
                            DonVi = "ngay",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c6",
                            DonVi = "ngay",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "100000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "120000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "300000"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoTienChiTieu")
                        .HasColumnType("int");

                    b.Property<int>("TongThanhToan")
                        .HasColumnType("int");

                    b.HasKey("MaChiPhi", "MaChuyenCongTac");

                    b.HasIndex("MaChuyenCongTac");

                    b.ToTable("ChiPhiCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChuyenCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChuyenCongTac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("chua thuc hien");

                    b.HasKey("MaChuyenCongTac");

                    b.ToTable("ChuyenCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatFile", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .IsUnicode(false)
                        .HasDefaultValue("5");

                    b.HasKey("FileID");

                    b.HasIndex("MaDeXuat");

                    b.ToTable("DeXuatFile");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Lydo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianDeXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaDeXuat");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("DeXuatThanhToan");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MaChuyenCongTac", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhanVienCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaCapBac");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Mai Thuy Nga"
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Vu Duc Thi"
                        },
                        new
                        {
                            MaNhanVien = "IT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Cao Kim Anh"
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            MaCapBac = "c4",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Pham Phuong Thanh"
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Nguyen Duc Dan"
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Tran Thi Hue"
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nham Ngoc Tan"
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Ha Huy Khoai"
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Hong Nhung"
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            MaCapBac = "c2",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Hoang Ngoc Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Lam Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Quoc Tuan"
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Thi Hoa"
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            MaCapBac = "c2",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Tran Quoc Hung"
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            MaCapBac = "c3",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Canh Toan"
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Mai Tien Dung"
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Duc Khoa"
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            MaCapBac = "c6",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Le Huyen Trang"
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Ngoc Quang"
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            MaCapBac = "c2",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Huy Hoang"
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            MaCapBac = "c5",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Vu Tuan Tu"
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Thi Nga"
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            MaCapBac = "c4",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Thuy Duong"
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Van Thieu"
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Pham Hai Yen"
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Bui Sy Thang"
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Tran Hoang Duong"
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            MaCapBac = "c1",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Xuan The"
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Lan"
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Nguyen Bich Tram"
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Le Thi Quy"
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Ho Xuan Ngoc"
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Hoang Ngoc Ha"
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Van Lich"
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            MaCapBac = "c3",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Thi Hai"
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Dang canh Khanh"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.PhongBan", b =>
                {
                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("NgayThanhLap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 23, 13, 42, 44, 112, DateTimeKind.Local).AddTicks(9952));

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("MaPhongBan");

                    b.ToTable("PhongBans");

                    b.HasData(
                        new
                        {
                            MaPhongBan = "a0001",
                            TenPhongBan = "Phong kinh te"
                        },
                        new
                        {
                            MaPhongBan = "a0002",
                            TenPhongBan = "Phong CNTT"
                        },
                        new
                        {
                            MaPhongBan = "a0003",
                            TenPhongBan = "Phong dao tao"
                        },
                        new
                        {
                            MaPhongBan = "a0004",
                            TenPhongBan = "Phong truyen thong"
                        },
                        new
                        {
                            MaPhongBan = "a0005",
                            TenPhongBan = "Phong Ngon Ngu"
                        },
                        new
                        {
                            MaPhongBan = "a0006",
                            TenPhongBan = "Phong ctsv"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "RL01",
                            Description = "Quản trị hệ thống",
                            Name = "admin"
                        },
                        new
                        {
                            Id = "RL02",
                            Description = "nhân viên trong một phòng ban",
                            Name = "Nhân viên"
                        },
                        new
                        {
                            Id = "RL03",
                            Description = "trưởng bộ phận của một phòng ban",
                            Name = "Trưởng bộ phận"
                        },
                        new
                        {
                            Id = "RL04",
                            Description = "nhân viên phòng kế toán",
                            Name = "Phòng kế toán"
                        },
                        new
                        {
                            Id = "RL05",
                            Description = "lãnh đạo nhà trường",
                            Name = "Lãnh đạo nhà trường"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ThanhToan", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime>("ThoiGianDeXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongChiPhi")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon", "MaDeXuat");

                    b.HasIndex("MaDeXuat")
                        .IsUnique();

                    b.ToTable("ThanhToan");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEN/jhNuJOmD+yu2IDMK03IaSNAL09C5g4i8Ez7U74SmsBB0F0XW1gSFZVAsrfr2btg=="
                        },
                        new
                        {
                            MaNhanVien = "IT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEIvDJA4945IC6VbgGZmaHcT7LcPP7IIXqQiVdkfka5KSSRLiXzJ2TTuqyHnnZWPtHw=="
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            PasswordHash = "AQAAAAEAACcQAAAAECg1WsA6GiKsaidy6E45p9o6Y+gGXOcw4R1Qfes/M1+H+d3BvOtMCDB3Ub/3Q/eTEA=="
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEAov7Wj/uQyMZcvL51EDBTWfhdVzaBrZXrTP/mH1owzxZ1hDIlhWxrLyuT3atz1eKQ=="
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEJTg15XIIi9OcBXglRzd3fkTB64Zhy7uPpgFAdBNh1GzkdQRifnj/q1wPYOidTQ6Gw=="
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEDgDOQAUiguWaksQZ8RKaJvr6NT17cvB7mKhx9lpGq9W1/UG291M+ssJGxaMZnfwsQ=="
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEF27z4NMqV+z47VvKiIKeVFugwktJY1UNyY8F9aRRovO0OcdglswNvZ78aA8RAwsrA=="
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEBGYPYdEeTsuA27AI47kTI1MEQAI/OdyTDIMcjxj3cm+J8huy6QxncooJzgbJgEnIw=="
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEPW9zkmEbtmberNtTryjnWsY7eRrwJk+FoogF8a0DrrhBbIl16ficq9Jzw18UTI6IA=="
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEPFDIL4BXvEhbfVc8o2hxg+nIWx03GYM48sXofwpkXgO9WqiblGeAP9HIkkpjt13aw=="
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEE16zC5HfTYVPTuwk5T4Yls5UrVgHM7X9aVXs3pLttZtkJHskO+yRF+pOg+IB20T9Q=="
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEHu8iuxZ6fO+m3eVLyXDeMTRs54BzzvAjSsKQYvd8jXhO1e85N8guQiEpDdJcyGCfw=="
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEPPPLDv8/Mj784QGaXrC7O9p9f3h8/3gqTWEZj2c++5hXvmZGL/B6bhPFWtO/hhf7Q=="
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEIi6QbJ35yl9dTTp3M9ekYNej6Oih8nH6j2xWzHksgujy0Hq1firDJ+ysSaK3r+j2A=="
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            PasswordHash = "AQAAAAEAACcQAAAAECMdPkM4J78nWFW9KjwfZqS1U9hjqm1dT+kPsxSkbimreXqhP7WkrcTMpkZ9iiK5qA=="
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEBjFyQVhZUkSL39c46bVoGlWiAl2vkAyI8rcj4rRovXWyGp2JUzzWuNmn7hde4ISzw=="
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEN4X6sRzLpHTWpLcpDloQElTJpLigV3ztrpL6EL8HpH7G2BnkLc8d77grZ5Kn90exQ=="
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            PasswordHash = "AQAAAAEAACcQAAAAELP0SghEeUat+gra1oez+n4wbHx9FdSkjP2EwzlDtfZBNbvRrZ/NyPSo3hmRTTgp1Q=="
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEKPREFUQCDzIJezI/A/j7YDX2/mKcB1Agj/DajIavdd2CeNendPw8ZQXlVYskNWe3g=="
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ4xQiMIcnDgjdxtqtVpvHt62PhN8KzFuO04oS4sdV396g8Pz8TAdW+QHPKifTgoJA=="
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEP/mhRnTa2vZpZijY1OuXYFyOVTKr+0pmG8mvoBFzvszwvRkBCd/AiXH4Gxc9db/9Q=="
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEKT59FME38HWmzn5t2tnJoPXRzaqhsGdIqamx//tvYGg+ceAe6wJw3OG3OMCep9RLQ=="
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            PasswordHash = "AQAAAAEAACcQAAAAENai20afNFtCOoiO8IAL4fS/PVY/6H1jDVpzgcqy4rjC+DHu3cJ9sa6HhGnmTwxSeg=="
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEPOQtCSL8OS0uE0oKrsfV2/Zd8akQuqTC5ViirhdyOl4imKfPLfUZ4SmI9wl1Em8YA=="
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            PasswordHash = "AQAAAAEAACcQAAAAEE10eU6t3jAI7N/bYxF3hzP39x2gI55bsJ6XlD2H6QEojBQ4I91KwsgbRKYWZbrC9w=="
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            PasswordHash = "AQAAAAEAACcQAAAAEE7rkqVtkc5f9wzMsjF1rKjHNls8Zgsa48SBeOzCIqlXeSeOTs5yTQdwrL/fbiPStA=="
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            PasswordHash = "AQAAAAEAACcQAAAAEIe4Tr0QlLW0rLmOS4sFhthbxCrFjaY+YxsCjXCLTkS7tbVOcGIivEOs94nbMdt/cA=="
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            PasswordHash = "AQAAAAEAACcQAAAAEB7tsPlPs7ib30By1e/it66ADTubaBB2Vw/wadpDHNQsJuJ0aNYbxNyMKznLQQnWIg=="
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            PasswordHash = "AQAAAAEAACcQAAAAEMdXOVLSDOL4p/AWNZBpzb7qo7w1SIKtkInwiNtY3jUjKXtJf25ihq16+TXm57oXkw=="
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            PasswordHash = "AQAAAAEAACcQAAAAECBRELXX5UfONtx6iCfxKhG+/W1tJ4pS7658jowwxP0znn2ERHkIPOXQ9lnSaIO+SA=="
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEGCKFlurBJs7qvjHubeSep7uKyGRbrT0mCRNCjMd6nvMXQD9oW4D7bBb1PgCCO96og=="
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEKsVUp06ClE3VA11RqgOAFm3USNBcc0bdF/P9VHqv00wb2Liu91vArw6x6izOzw0BQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEBVJ1NC8QK9GGOwsKyJbLKDQZ987zlgchzql7wX2H4iz4oX5IsnpHfiazNok9+DBaQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEALZmcX5fN2xal8mw2HX6vrFWEYBlraLX+cdEk6H+5xe+4Ad0/ztySKgJwq8cb697g=="
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEB7BPsRjuHPPCWU6U1zkkZ9AcLEuuGPqszuxmyjW59Lric/tlgewqsPcnvFtpwO0fA=="
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEF45bQLXxEQ4UZIpzF9b8pn51lHiXcuZXMI58K3kR33cKVFTzcBsgKw8OqdaPRR/tA=="
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("RoleId", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "IT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "KT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "DT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "TT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "NN001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "CT001"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaCapBac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhi")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhis")
                        .WithMany("chiPhiCongTac")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("chiPhiCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatFile", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", "DeXuatThanhToan")
                        .WithMany("deXuatFiles")
                        .HasForeignKey("MaDeXuat");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienDeXuat")
                        .WithMany("deXuatThanhToans")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaCapBac");

                    b.HasOne("TLU.BusinessFee.Data.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaPhongBan");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ThanhToan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", "DeXuatThanhToan")
                        .WithOne("ThanhToan")
                        .HasForeignKey("TLU.BusinessFee.Data.Entities.ThanhToan", "MaDeXuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithOne("User")
                        .HasForeignKey("TLU.BusinessFee.Data.Entities.User", "MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("userClaims")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserLogin")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserToken")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
