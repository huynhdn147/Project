// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TLU.BusinessFee.Data.EF;

namespace TLU.BusinessFee.Data.Migrations
{
    [DbContext(typeof(TLUBusinessFeeDbContext))]
    partial class TLUBusinessFeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "home titleee",
                            Value = "this is home page"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.CapBac", b =>
                {
                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TenCapBac")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaCapBac");

                    b.ToTable("CapBac");

                    b.HasData(
                        new
                        {
                            MaCapBac = "c1",
                            TenCapBac = "CAP1"
                        },
                        new
                        {
                            MaCapBac = "c2",
                            TenCapBac = "CAP2"
                        },
                        new
                        {
                            MaCapBac = "c3",
                            TenCapBac = "CAP3"
                        },
                        new
                        {
                            MaCapBac = "c4",
                            TenCapBac = "CAP4"
                        },
                        new
                        {
                            MaCapBac = "c5",
                            TenCapBac = "CAP5"
                        },
                        new
                        {
                            MaCapBac = "c6",
                            TenCapBac = "CAP6"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhi", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChiPhi")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(true);

                    b.HasKey("MaChiPhi");

                    b.ToTable("ChiPhi");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Khach San"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve may bay"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Luu tru "
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MoTa = "Tien ở khách sạn",
                            TenChiPhi = "Ve tau,xe"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTienDinhMuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChiPhi", "MaCapBac");

                    b.HasIndex("MaCapBac");

                    b.ToTable("DinhMuc");

                    b.HasData(
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c1",
                            DonVi = "dem",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c2",
                            DonVi = "dem",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c3",
                            DonVi = "dem",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c4",
                            DonVi = "dem",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c5",
                            DonVi = "dem",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP1",
                            MaCapBac = "c6",
                            DonVi = "dem",
                            SoTienDinhMuc = "500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "1500000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "1700000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "2000000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "2300000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "2600000"
                        },
                        new
                        {
                            MaChiPhi = "CP2",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "3000000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c1",
                            DonVi = "ngay",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c2",
                            DonVi = "ngay",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c3",
                            DonVi = "ngay",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c4",
                            DonVi = "ngay",
                            SoTienDinhMuc = "300000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c5",
                            DonVi = "ngay",
                            SoTienDinhMuc = "350000"
                        },
                        new
                        {
                            MaChiPhi = "CP3",
                            MaCapBac = "c6",
                            DonVi = "ngay",
                            SoTienDinhMuc = "400000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c1",
                            DonVi = "luot",
                            SoTienDinhMuc = "100000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c2",
                            DonVi = "luot",
                            SoTienDinhMuc = "120000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c3",
                            DonVi = "luot",
                            SoTienDinhMuc = "150000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c4",
                            DonVi = "luot",
                            SoTienDinhMuc = "200000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c5",
                            DonVi = "luot",
                            SoTienDinhMuc = "250000"
                        },
                        new
                        {
                            MaChiPhi = "CP4",
                            MaCapBac = "c6",
                            DonVi = "luot",
                            SoTienDinhMuc = "300000"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.Property<string>("MaChiPhi")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoTienChiTieu")
                        .HasColumnType("int");

                    b.Property<int>("TongThanhToan")
                        .HasColumnType("int");

                    b.HasKey("MaChiPhi", "MaChuyenCongTac");

                    b.HasIndex("MaChuyenCongTac");

                    b.ToTable("ChiPhiCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChuyenCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValue(new DateTime(2021, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChuyenCongTac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("MaChuyenCongTac");

                    b.ToTable("ChuyenCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.Property<string>("MaDeXuat")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Lydo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("SoNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianDeXuat")
                        .HasColumnType("datetime2");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaDeXuat");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("deXuatThanhToans");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.Property<string>("MaChuyenCongTac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MaChuyenCongTac", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("NhanVienCongTac");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaCapBac")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaCapBac");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Mai Thuy Nga"
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Vu Duc Thi"
                        },
                        new
                        {
                            MaNhanVien = "IT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Cao Kim Anh"
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            MaCapBac = "c4",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Pham Phuong Thanh"
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Nguyen Duc Dan"
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0002",
                            TenNhanVien = "Tran Thi Hue"
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            MaCapBac = "c3",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nham Ngoc Tan"
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Ha Huy Khoai"
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Hong Nhung"
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            MaCapBac = "c2",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Hoang Ngoc Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            MaCapBac = "c5",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Lam Tung"
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0001",
                            TenNhanVien = "Nguyen Quoc Tuan"
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Thi Hoa"
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            MaCapBac = "c2",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Tran Quoc Hung"
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            MaCapBac = "c3",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Canh Toan"
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Mai Tien Dung"
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Nguyen Duc Khoa"
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            MaCapBac = "c6",
                            MaPhongBan = "a0003",
                            TenNhanVien = "Le Huyen Trang"
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            MaCapBac = "c1",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Ngoc Quang"
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            MaCapBac = "c2",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Huy Hoang"
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            MaCapBac = "c5",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Vu Tuan Tu"
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Thi Nga"
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            MaCapBac = "c4",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Tran Thuy Duong"
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            MaCapBac = "c6",
                            MaPhongBan = "a0004",
                            TenNhanVien = "Nguyen Van Thieu"
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Pham Hai Yen"
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            MaCapBac = "c3",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Bui Sy Thang"
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Tran Hoang Duong"
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            MaCapBac = "c1",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Xuan The"
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            MaCapBac = "c4",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Mai Lan"
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0005",
                            TenNhanVien = "Nguyen Bich Tram"
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            MaCapBac = "c2",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Le Thi Quy"
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            MaCapBac = "c1",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Ho Xuan Ngoc"
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            MaCapBac = "c5",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Hoang Ngoc Ha"
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            MaCapBac = "c6",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Van Lich"
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            MaCapBac = "c3",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Nguyen Thi Hai"
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            MaCapBac = "c4",
                            MaPhongBan = "a0006",
                            TenNhanVien = "Dang canh Khanh"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.PhongBan", b =>
                {
                    b.Property<string>("MaPhongBan")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("NgayThanhLap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 3, 13, 10, 28, 57, 906, DateTimeKind.Local).AddTicks(1454));

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("MaPhongBan");

                    b.ToTable("PhongBans");

                    b.HasData(
                        new
                        {
                            MaPhongBan = "a0001",
                            TenPhongBan = "Phong kinh te"
                        },
                        new
                        {
                            MaPhongBan = "a0002",
                            TenPhongBan = "Phong CNTT"
                        },
                        new
                        {
                            MaPhongBan = "a0003",
                            TenPhongBan = "Phong dao tao"
                        },
                        new
                        {
                            MaPhongBan = "a0004",
                            TenPhongBan = "Phong truyen thong"
                        },
                        new
                        {
                            MaPhongBan = "a0005",
                            TenPhongBan = "Phong Ngon Ngu"
                        },
                        new
                        {
                            MaPhongBan = "a0006",
                            TenPhongBan = "Phong ctsv"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "RL01",
                            Description = "Quản trị hệ thống",
                            Name = "admin"
                        },
                        new
                        {
                            Id = "RL02",
                            Description = "nhân viên trong một phòng ban",
                            Name = "Nhân viên"
                        },
                        new
                        {
                            Id = "RL03",
                            Description = "trưởng bộ phận của một phòng ban",
                            Name = "Trưởng bộ phận"
                        },
                        new
                        {
                            Id = "RL04",
                            Description = "nhân viên phòng kế toán",
                            Name = "Phòng kế toán"
                        },
                        new
                        {
                            Id = "RL05",
                            Description = "lãnh đạo nhà trường",
                            Name = "Lãnh đạo nhà trường"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            MaNhanVien = "IT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEJRUpHOOGHnuI+FtLqWUxxsQn1pcKBHykGAQ87YOylb5R1sMVgd0PS3Kk5Ph0QnDog=="
                        },
                        new
                        {
                            MaNhanVien = "IT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEM++4+zHetnJaWCSAAqG6kGBRDgTxsNXit+N4B0MjS8oMTz+IeVbh3muAQ/beOBaLA=="
                        },
                        new
                        {
                            MaNhanVien = "IT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEGTOh93N7PBAtRSPBxnE0/DMI5vLnLkKvs8vT24GWbqDq7vYNVQTIv8XlH3dM02Qfw=="
                        },
                        new
                        {
                            MaNhanVien = "IT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEMr4onVq8Zm/T7qy1kbUsmeDqF42VKRQXswqnZDsTPuP72rzmP3xzLfbqXm8rzF2pg=="
                        },
                        new
                        {
                            MaNhanVien = "IT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEN7Vmbg1n7iuGlH0cyxnkAPm3xNCBKT6M1Frrpexe+PihAHLIFkavYjI7n2jydF4PQ=="
                        },
                        new
                        {
                            MaNhanVien = "IT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEKKwOQxM4305EKfiB6hgszzDMJKa3gi8ZjhN44oFQBuxMBim/SoZcMxc7a85zfrAGw=="
                        },
                        new
                        {
                            MaNhanVien = "KT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEHkkcx87/w3clEZBn7nLPVWAiIkUNYFkubJM16Hf5SRd91loBRvrMFlBDWfXWmOXUA=="
                        },
                        new
                        {
                            MaNhanVien = "KT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEAf9zQvNz8wJ9NlVvUBoACsBW9dHmo33e2043pfSMqPDQI2fObG2vPckHbDUCZvSRQ=="
                        },
                        new
                        {
                            MaNhanVien = "KT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEKunT6W/RLYRX6HRSktr+6RmOzlUW9oCI7f7ySTWQZKqm+a64g4cd9E9BYuIOrpcUw=="
                        },
                        new
                        {
                            MaNhanVien = "KT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEIlvNaa0/w/Muhtv/aRZ+AzJT95eenjOF496AZtgHcDN6l7Pts/CqmsllLNdtTESrg=="
                        },
                        new
                        {
                            MaNhanVien = "KT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEFMk+8tVB7egMHHpYZKSOGRaNtYorMnmhmnFqoJeHfQhcXcY7clicKCRUVRdMt/PZA=="
                        },
                        new
                        {
                            MaNhanVien = "KT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEIBNdE30i3JX0f9tPa/c90zvSPsds8DLBem/MMP5JrmrfE+MmJU/6OYGNnW8pYwL3g=="
                        },
                        new
                        {
                            MaNhanVien = "DT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEGOEhSkdsNHcopSHAGtL1NAefbnLdK9YmnHWimI7d4OvT5VSgN/ru+KlNggWfvtmiw=="
                        },
                        new
                        {
                            MaNhanVien = "DT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEOYUYVI/Pr4gMfEPmtM9n0GtuTX/iBhjIB7dCs1A0FOht0g8iiWlxr4lgLA13BOvPA=="
                        },
                        new
                        {
                            MaNhanVien = "DT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEKO8s6kRhApEofXbslDUF61H/2GO3eDx5/4s0l3LXgOCQx5Tj2YmcJkE0q1MrIBBcA=="
                        },
                        new
                        {
                            MaNhanVien = "DT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEEEmkmrVY7lEGMDqIUoetpn7Mj+ypfmbngkMM3um00BwW0oQ5e6jwpG3+P0kca7YKg=="
                        },
                        new
                        {
                            MaNhanVien = "DT005",
                            PasswordHash = "AQAAAAEAACcQAAAAECddIw09tzZGH+ectXCTMXQkwVvOSo5NrJCNrzZ1keAsEWkxs1dYu2PVHMZL+Welfw=="
                        },
                        new
                        {
                            MaNhanVien = "DT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEMhWk7nuk9jzNtRMI90WZRa7RTcWVl29Ex4KcHPCB6FgzwWJr1YMEW24ltvIuB3rMA=="
                        },
                        new
                        {
                            MaNhanVien = "TT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEBFr9wY4yBIj5nR3c/V9LN5nEdfA5z4bYOHhUZLixA/Hl8/LhwF0FgayQIH5hOucog=="
                        },
                        new
                        {
                            MaNhanVien = "TT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEN2bLvk1uYYkGkRM4W0h8jjaMpxZvrgJRPRSCaVjSOwvNWE2TNmvOtn0oL+dFJBOFw=="
                        },
                        new
                        {
                            MaNhanVien = "TT004",
                            PasswordHash = "AQAAAAEAACcQAAAAEIzbCrm5oDUdiT5/bDbzvNe3nx9Fh5dBvzjC8AcAcnPUqnYHxRmylZItw57e6IfyKA=="
                        },
                        new
                        {
                            MaNhanVien = "TT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEATBzcqqlpCIPBJz/jbGF1OynJ5dsk64ptyCkLkGk6g8Z6K9sUq9zShP33w4Faqi9g=="
                        },
                        new
                        {
                            MaNhanVien = "TT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEAu0p+IKvRhUGIpqq509wlq15b3Qki4whVjbSjCpJVgwyUdEQo63ctRUDH6RqgyPsg=="
                        },
                        new
                        {
                            MaNhanVien = "TT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEAm76nbM6OazZ+Kh2VutpL2mZwjdqF47/PJp9bh0bvwc+mMAnwFqsNePRvv9YqBrWA=="
                        },
                        new
                        {
                            MaNhanVien = "NN001",
                            PasswordHash = "AQAAAAEAACcQAAAAEO94hD6xn1hjm7vudJxDMaV/+bwmxu755KD9j79QSZ+4b6xrr+Y4FJNG//rSCwao/g=="
                        },
                        new
                        {
                            MaNhanVien = "NN006",
                            PasswordHash = "AQAAAAEAACcQAAAAENj8Lwaa1KMwUfwnK+0BKDKz836LML8Ae+HyGR/Kd4rBS/1aDPfPUXc5GQKvpN1Ovg=="
                        },
                        new
                        {
                            MaNhanVien = "NN002",
                            PasswordHash = "AQAAAAEAACcQAAAAEG/qGC+6nLNf+mkE2YGHTsoAhfLTfLZXVFI9ee68yFlzE6yWzNXjEicDjrsU1mlnXA=="
                        },
                        new
                        {
                            MaNhanVien = "NN004",
                            PasswordHash = "AQAAAAEAACcQAAAAEPbuxkylxGRHu3V0sIP36HiVD56RNahQBUrY5jS2DVlmmyVcGUVu7VNkv+1H64kcXA=="
                        },
                        new
                        {
                            MaNhanVien = "NN003",
                            PasswordHash = "AQAAAAEAACcQAAAAEFD1kOGlpp6jEpyPzTJJhjMfz04cxdjdH/3BfaUCuqn8bUIsWaSqXcpzxOyUZRtNgw=="
                        },
                        new
                        {
                            MaNhanVien = "NN005",
                            PasswordHash = "AQAAAAEAACcQAAAAEHG2ZYUALOheHfER8gmg2HhSvvcwzys3Bk1L+XrjpCoItftQCm7LnHO3hlc8xN2nbA=="
                        },
                        new
                        {
                            MaNhanVien = "CT001",
                            PasswordHash = "AQAAAAEAACcQAAAAEO7ChhCETxzKGHt36fAo/OCNosaST9tO4DX5vN1KsAyPKs7HJkw2fzQp98U9QcFm2Q=="
                        },
                        new
                        {
                            MaNhanVien = "CT003",
                            PasswordHash = "AQAAAAEAACcQAAAAEHIcvM2RgAygu4ZVlQELB/nCVDoVH4kRpoBdSvDWKusakXWZyVsztUgdortSg/uqZw=="
                        },
                        new
                        {
                            MaNhanVien = "CT005",
                            PasswordHash = "AQAAAAEAACcQAAAAEMeiQIBTMPrUagXCUZHhr36oguY9Ck4Mf7KyChawl3Ic955EjC0R++EM7+7/5yYEGQ=="
                        },
                        new
                        {
                            MaNhanVien = "CT002",
                            PasswordHash = "AQAAAAEAACcQAAAAEBNojrox29scWE5OPYvhA2r+p+a5omFlp6060VeeAFfxS2K19hz7UYX1gRWFeFjOZA=="
                        },
                        new
                        {
                            MaNhanVien = "CT004",
                            PasswordHash = "AQAAAAEAACcQAAAAECcxAy9JVB3EJ+ePghC8E+E2NFvEEBJcV+TC/+99QZOPrCF0z+0SVAcf4SCviF9Dxg=="
                        },
                        new
                        {
                            MaNhanVien = "CT006",
                            PasswordHash = "AQAAAAEAACcQAAAAEGWd/QJwT3ynR0ZaySiEU93enuPVLdcKrTJvxkNHCLxv6/9+MPP6wc/sxUtspz478w=="
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("RoleId", "MaNhanVien");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "IT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "KT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "DT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "TT001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "NN001"
                        },
                        new
                        {
                            RoleId = "RL01",
                            MaNhanVien = "CT001"
                        });
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanVien", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiChucVu", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaCapBac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhi")
                        .WithMany("chiPhiChucVus")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.ChiPhiCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChiPhi", "chiPhis")
                        .WithMany("chiPhiCongTac")
                        .HasForeignKey("MaChiPhi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("chiPhiCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.DeXuatThanhToan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienDeXuat")
                        .WithMany("deXuatThanhToans")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienCongTac", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.ChuyenCongTac", "ChuyenCongTac")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaChuyenCongTac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithMany("nhanVienCongTacs")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.CapBac", "CapBac")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaCapBac");

                    b.HasOne("TLU.BusinessFee.Data.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanVienPhongBans")
                        .HasForeignKey("MaPhongBan");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.RoleClaims", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.User", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.NhanVienPhongBan", "NhanVienPhongBan")
                        .WithOne("User")
                        .HasForeignKey("TLU.BusinessFee.Data.Entities.User", "MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserClaim", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("userClaims")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserLogin")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserRole", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TLU.BusinessFee.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TLU.BusinessFee.Data.Entities.UserToken", b =>
                {
                    b.HasOne("TLU.BusinessFee.Data.Entities.User", "user")
                        .WithMany("UserToken")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
